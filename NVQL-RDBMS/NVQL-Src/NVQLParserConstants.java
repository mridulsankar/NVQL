/* Generated By:JavaCC: Do not edit this line. NVQLParserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface NVQLParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int ETDCMD = 4;
  /** RegularExpression Id. */
  int RTDCMD = 5;
  /** RegularExpression Id. */
  int SCDCMD = 6;
  /** RegularExpression Id. */
  int EXDCMD = 7;
  /** RegularExpression Id. */
  int UCDCMD = 8;
  /** RegularExpression Id. */
  int CCDCMD = 9;
  /** RegularExpression Id. */
  int CECMD = 10;
  /** RegularExpression Id. */
  int CRCMD = 11;
  /** RegularExpression Id. */
  int CSECCMD = 12;
  /** RegularExpression Id. */
  int CEXPCMD = 13;
  /** RegularExpression Id. */
  int SELECT = 14;
  /** RegularExpression Id. */
  int BETWEEN = 15;
  /** RegularExpression Id. */
  int PRECOND = 16;
  /** RegularExpression Id. */
  int POSTCOND = 17;
  /** RegularExpression Id. */
  int WHERE = 18;
  /** RegularExpression Id. */
  int ON = 19;
  /** RegularExpression Id. */
  int FROM = 20;
  /** RegularExpression Id. */
  int TO = 21;
  /** RegularExpression Id. */
  int DELETE = 22;
  /** RegularExpression Id. */
  int DROP = 23;
  /** RegularExpression Id. */
  int ET = 24;
  /** RegularExpression Id. */
  int RT = 25;
  /** RegularExpression Id. */
  int SCT = 26;
  /** RegularExpression Id. */
  int EXT = 27;
  /** RegularExpression Id. */
  int N = 28;
  /** RegularExpression Id. */
  int CVE = 29;
  /** RegularExpression Id. */
  int LBRACE = 30;
  /** RegularExpression Id. */
  int RBRACE = 31;
  /** RegularExpression Id. */
  int LPAREN = 32;
  /** RegularExpression Id. */
  int RPAREN = 33;
  /** RegularExpression Id. */
  int COMMA = 34;
  /** RegularExpression Id. */
  int COLON = 35;
  /** RegularExpression Id. */
  int DOT = 36;
  /** RegularExpression Id. */
  int EQUALS = 37;
  /** RegularExpression Id. */
  int NOTEQUAL = 38;
  /** RegularExpression Id. */
  int LT = 39;
  /** RegularExpression Id. */
  int LTE = 40;
  /** RegularExpression Id. */
  int GT = 41;
  /** RegularExpression Id. */
  int GTE = 42;
  /** RegularExpression Id. */
  int AND = 43;
  /** RegularExpression Id. */
  int OR = 44;
  /** RegularExpression Id. */
  int NUMBER = 45;
  /** RegularExpression Id. */
  int DATATYPE = 46;
  /** RegularExpression Id. */
  int ID = 47;
  /** RegularExpression Id. */
  int QUOTED_STRING = 48;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<token of kind 1>",
    "<token of kind 2>",
    "<token of kind 3>",
    "\"DEFINE ENTITY-TYPE\"",
    "\"DEFINE RELATION-TYPE\"",
    "\"DEFINE SECURITY-CONDITION-TYPE\"",
    "\"DEFINE EXPLOIT-TYPE\"",
    "\"DEFINE UNIQUE\"",
    "\"DEFINE CARDINALITY\"",
    "\"CREATE ENTITY\"",
    "\"CREATE RELATION\"",
    "\"CREATE SECURITY-CONDITION\"",
    "\"CREATE EXPLOIT\"",
    "\"SELECT\"",
    "\"BETWEEN\"",
    "\"PRECOND\"",
    "\"POSTCOND\"",
    "\"WHERE\"",
    "\"ON\"",
    "\"FROM\"",
    "\"TO\"",
    "\"DELETE\"",
    "\"DROP\"",
    "\"ENTITY-TYPE\"",
    "\"RELATION-TYPE\"",
    "\"SECURITY-CONDITION-TYPE\"",
    "\"EXPLOIT-TYPE\"",
    "\"N\"",
    "\"CVE\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\":\"",
    "\".\"",
    "\"==\"",
    "\"!=\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"AND\"",
    "\"OR\"",
    "<NUMBER>",
    "<DATATYPE>",
    "<ID>",
    "<QUOTED_STRING>",
  };

}
