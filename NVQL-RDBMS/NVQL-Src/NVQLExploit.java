import java.sql.*;
import java.util.ArrayList;
import java.util.Arrays;

public class NVQLExploit {

    static String preConddisplay(ArrayList<String> securityCond, ArrayList<ArrayList<String>> EntityTypeNameList) {
        String PreCondSyntax = "";
        for (int i = 0; i < securityCond.size(); i++) {

            if (i >= 1)
                PreCondSyntax = PreCondSyntax + ", " + securityCond.get(i);
            else
                PreCondSyntax = PreCondSyntax + securityCond.get(i);

            for (int j = 0; j < EntityTypeNameList.get(i).size(); j++) {

                if (j == 0)
                    PreCondSyntax = PreCondSyntax + " (" + EntityTypeNameList.get(i).get(j);
                else if (EntityTypeNameList.get(i).size() == 4 && (j == 1))
                    PreCondSyntax = PreCondSyntax + "." + EntityTypeNameList.get(i).get(j);
                else if (EntityTypeNameList.get(i).size() == 5 && (j == 1 || j == 4))
                    PreCondSyntax = PreCondSyntax + ":" + EntityTypeNameList.get(i).get(j);
                else
                    PreCondSyntax = PreCondSyntax + " " + EntityTypeNameList.get(i).get(j);

                if (j == EntityTypeNameList.get(i).size() - 1)
                    PreCondSyntax = PreCondSyntax + ")";
            }

        }

        return PreCondSyntax;
    }

    static String postConddisplay(ArrayList<String> securityCond, ArrayList<ArrayList<String>> EntityTypeNameList) {
        String PostCondSyntax = "";
        for (int i = 0; i < securityCond.size(); i++) {

            if (i >= 1)
                PostCondSyntax = PostCondSyntax + ", " + securityCond.get(i);
            else
                PostCondSyntax = PostCondSyntax + securityCond.get(i);

            for (int j = 0; j < EntityTypeNameList.get(i).size(); j++) {

                if (j == 0)
                    PostCondSyntax = PostCondSyntax + " (" + EntityTypeNameList.get(i).get(j);
                else if (EntityTypeNameList.get(i).size() == 4 && (j == 1))
                    PostCondSyntax = PostCondSyntax + "." + EntityTypeNameList.get(i).get(j);
                else if (EntityTypeNameList.get(i).size() == 5 && (j == 1 || j == 4))
                    PostCondSyntax = PostCondSyntax + ":" + EntityTypeNameList.get(i).get(j);
                else
                    PostCondSyntax = PostCondSyntax + " " + EntityTypeNameList.get(i).get(j);

                if (j == EntityTypeNameList.get(i).size() - 1)
                    PostCondSyntax = PostCondSyntax + ")";
            }

        }

        return PostCondSyntax;
    }

    static Boolean existsExploit(Connection pgsqlCon) throws Exception {
        String query;
        Boolean exists = false;

        return (exists);
    }

    static String PreSecCondNames(String expTypeName, Connection pgsqlCon) throws Exception {

        String query = "SELECT \"Precond\" FROM \"EXPLOIT_TYPE_DEF\" WHERE \"Exploit_Type_Name\" = '" + expTypeName
                + "'";
        // System.out.println(query);
        PreparedStatement statement = pgsqlCon.prepareStatement(query);
        ResultSet result = statement.executeQuery();
        result.next();

        return (result.getString(1));
    }

    static void createExploit(String expTypeName, String attrValList, ArrayList<String> securityCond,
            ArrayList<ArrayList<String>> EntityRelCondList, ArrayList<String> securityCond1,
            ArrayList<ArrayList<String>> EntityRelCondList1, Connection pgsqlCon) {

        try {
            if (NVQLExploitType.existsExploitType(expTypeName, pgsqlCon))
                beginExploit(expTypeName, attrValList, securityCond, EntityRelCondList, securityCond1,
                        EntityRelCondList1, pgsqlCon);
            else {
                System.out.println("ERROR.NVQLExploit: Exploit-Type <" + expTypeName + "> is not defined");
                System.exit(0);
            }
        } catch (Exception e) {
            System.out.println("NVQLcreateExploit: PostgreSQL Error");
            System.out.println(e);
            System.exit(0);
        }

    }

    static void beginExploit(String expTypeName, String attrValList, ArrayList<String> securityCond,
            ArrayList<ArrayList<String>> EntityRelCondList, ArrayList<String> securityCond1,
            ArrayList<ArrayList<String>> EntityRelCondList1, Connection pgsqlCon) {

        try {
            String datalist = "";
            String query;
            String valList1 = "", valList2 = "";
            String secCondNameVal = "", secCondNameVal1 = "";

            datalist = NVQLExploitType.getAttrDefList(expTypeName, pgsqlCon);
            String attrList = "", valList = "";
            NVQLAttrDefList aDefList = null;
            NVQLAttrValList aValList = null;
            int pos;
            // System.out.println("Datalist = "+datalist);
            // datalist = datalist + ",";

            if (datalist != null && datalist != "") {

                if (!attrValList.isEmpty()) {
                    aDefList = new NVQLAttrDefList(datalist);
                    aValList = new NVQLAttrValList(attrValList);

                    for (String attr : aValList.getAttrList()) {
                        if (!aDefList.existsAttr(attr)) {
                            System.out.println("ERROR.NVQLExploit: Undefined attribute <" + attr + ">");
                            System.exit(0);
                            return;
                        }
                    }
                    // System.out.println("@@" + checkUniquenessConstraint(aValList, pgsqlCon));

                    if (aValList.getAttrList().size() != aDefList.getAttrList().size()) {
                        System.out.println("WARNING: No. of Attributes in Creation = [ " + aValList.getAttrList().size()
                                + " ] & Defintion = [ " + aDefList.getAttrList().size() + " ] are unequal ");

                        // return; if we uncomment return then if no. of attributes in
                        // definition and
                        // creation doesnt match then we cannot create
                    }
                    attrList = aValList.getAttrList4SQL(); // Comma separated list of
                                                           // attribute
                                                           // names
                                                           // (within
                                                           // double quotes) to be used in
                                                           // INSERT
                                                           // statement
                    valList = aValList.getValueList4SQL(aDefList); // Comma separated list
                                                                   // of values
                                                                   // to be
                                                                   // used in INSERT
                                                                   // statement
                    ArrayList<String> ListofsecCond = new ArrayList<String>(
                            Arrays.asList(PreSecCondNames(expTypeName, pgsqlCon).replace(" ", "").split(",")));

                    if (valList != null && !valList.isEmpty()) {

                        for (int i = 0; i < securityCond.size(); i++) {

                            if (!ListofsecCond
                                    .contains(securityCond.get(i).substring(securityCond.get(i).indexOf(":") + 1))) {
                                System.out.println("ERROR.NVQLExploit: Security Condition Type <"
                                        + securityCond.get(i).substring(securityCond.get(i).indexOf(":") + 1)
                                        + "> is not mentioned in definition");
                                System.exit(0);
                                return;
                            }
                            if (!NVQLSecCondType.existsSecCondType(
                                    securityCond.get(i).substring(securityCond.get(i).indexOf(":") + 1), pgsqlCon)) {
                                System.out.println("ERROR.NVQLExploit: Security Condition type <"
                                        + securityCond.get(i).substring(securityCond.get(i).indexOf(":") + 1)
                                        + "> is not defined");
                                System.exit(0);
                                return;
                            }

                            if (NVQLSecCond.existsSecCond(
                                    securityCond.get(i).substring(securityCond.get(i).indexOf(":") + 1),
                                    EntityRelCondList.get(i), pgsqlCon) == null) {
                                System.out.println("ERROR.NVQLExploit: Security Condition has no Attribute named as \""
                                        + EntityRelCondList.get(i).get(1) + "\"");
                                System.exit(0);
                                return;

                            } else if (!NVQLSecCond.existsSecCond(
                                    securityCond.get(i).substring(securityCond.get(i).indexOf(":") + 1),
                                    EntityRelCondList.get(i), pgsqlCon)) {
                                System.out.println("ERROR.NVQLExploit: Security Condition "
                                        + securityCond.get(i).substring(securityCond.get(i).indexOf(":") + 1) + " with "
                                        + EntityRelCondList.get(i).get(1) + " "
                                        + EntityRelCondList.get(i).get(2).replace("==", "=") + " "
                                        + EntityRelCondList.get(i).get(3) + " does not exist");

                                System.exit(0);
                                return;
                            }

                            // System.out.println("^^" +
                            // NVQLSecCond.SecCondName(securityCond.get(i).substring(securityCond.get(i).indexOf(":")
                            // + 1),EntityRelCondList.get(i), pgsqlCon) + "^^");

                            pos = NVQLExploitType.existsExploitTypeSecCondPosition(expTypeName, "Precond",
                                    securityCond.get(i).substring(securityCond.get(i).indexOf(":") + 1), pgsqlCon);

                            // System.out.println("^^" + pos + "^^");
                            String secAttr = "";
                            if (pos <= -1) {
                                System.out.println(
                                        "ERROR.NVQLExploit: Security Pre-Condition doesn't exists and it is in position "
                                                + pos);
                                System.exit(0);
                                return;
                            }

                            secCondNameVal = NVQLSecCond.SecCondName(
                                    securityCond.get(i).substring(securityCond.get(i).indexOf(":") + 1),
                                    EntityRelCondList.get(i), pgsqlCon);

                            secAttr = NVQLExploitType.corresSecCondAttrVal(expTypeName, "Precond_Attr_Val_List", pos,
                                    pgsqlCon);
                            // System.out.println("**" + secAttr + "**");

                            if (!NVQLSecCond.existsexpDefCondition(
                                    securityCond.get(i).substring(securityCond.get(i).indexOf(":") + 1), secCondNameVal,
                                    secAttr, pgsqlCon)) {
                                System.out.println(
                                        "ERROR.NVQLExploit: The Security Pre-Condition's of the exploit-type definition doesn't have ["
                                                + secAttr.replace("$", "").replace("#", "") + "] ");
                                System.exit(0);
                                return;
                            }

                            if (valList1.equals(""))
                                valList1 = valList1 + secCondNameVal;
                            else
                                valList1 = valList1 + "," + secCondNameVal;

                        }

                        for (int i = 0; i < securityCond1.size(); i++) {

                            if (!ListofsecCond
                                    .contains(securityCond1.get(i).substring(securityCond1.get(i).indexOf(":") + 1))) {
                                System.out.println("ERROR.NVQLExploit: Security Condition Type <"
                                        + securityCond1.get(i).substring(securityCond1.get(i).indexOf(":") + 1)
                                        + "> is not mentioned in definition");
                                System.exit(0);
                                return;
                            }
                            if (!NVQLSecCondType.existsSecCondType(
                                    securityCond1.get(i).substring(securityCond1.get(i).indexOf(":") + 1), pgsqlCon)) {
                                System.out.println("ERROR.NVQLExploit: Security Condition type <"
                                        + securityCond1.get(i).substring(securityCond1.get(i).indexOf(":") + 1)
                                        + "> is not defined");
                                System.exit(0);
                                return;
                            }

                            if (NVQLSecCond.existsSecCond(
                                    securityCond1.get(i).substring(securityCond1.get(i).indexOf(":") + 1),
                                    EntityRelCondList1.get(i), pgsqlCon) == null) {
                                System.out.println("ERROR.NVQLExploit: Security Condition has no Attribute named as \""
                                        + EntityRelCondList1.get(i).get(1) + "\"");
                                System.exit(0);
                                return;

                            } else if (!NVQLSecCond.existsSecCond(
                                    securityCond1.get(i).substring(securityCond1.get(i).indexOf(":") + 1),
                                    EntityRelCondList1.get(i), pgsqlCon)) {
                                System.out.println("ERROR.NVQLExploit: Security Condition "
                                        + securityCond1.get(i).substring(securityCond1.get(i).indexOf(":") + 1)
                                        + " with " + EntityRelCondList1.get(i).get(1) + " "
                                        + EntityRelCondList1.get(i).get(2).replace("==", "=") + " "
                                        + EntityRelCondList1.get(i).get(3) + " does not exist");

                                System.exit(0);
                                return;
                            }

                            // System.out.println("^^" +
                            // NVQLSecCond.SecCondName(securityCond1.get(i).substring(securityCond1.get(i).indexOf(":")
                            // + 1), EntityRelCondList1.get(i), pgsqlCon) + "^^");

                            pos = NVQLExploitType.existsExploitTypeSecCondPosition(expTypeName, "Postcond",
                                    securityCond1.get(i).substring(securityCond1.get(i).indexOf(":") + 1), pgsqlCon);

                            // System.out.println("^^" + pos + "^^");
                            String secAttr1 = "";
                            if (pos <= -1) {
                                System.out.println(
                                        "ERROR.NVQLExploit: Security Post-Condition doesn't exists and it is in position "
                                                + pos);
                                System.exit(0);
                                return;
                            }

                            secCondNameVal1 = NVQLSecCond.SecCondName(
                                    securityCond1.get(i).substring(securityCond1.get(i).indexOf(":") + 1),
                                    EntityRelCondList1.get(i), pgsqlCon);

                            secAttr1 = NVQLExploitType.corresSecCondAttrVal(expTypeName, "Postcond_Attr_Val_List", pos,
                                    pgsqlCon);
                            // System.out.println("**" + secAttr1 + "**");

                            if (!NVQLSecCond.existsexpDefCondition(
                                    securityCond1.get(i).substring(securityCond1.get(i).indexOf(":") + 1),
                                    secCondNameVal1, secAttr1, pgsqlCon)) {
                                System.out.println(
                                        "ERROR.NVQLExploit: The Security Post-Condition's of the exploit-type definition doesn't have ["
                                                + secAttr1.replace("$", "").replace("#", "") + "] ");
                                System.exit(0);
                                return;
                            }

                            if (valList2.equals(""))
                                valList2 = valList2 + secCondNameVal1;
                            else
                                valList2 = valList2 + "," + secCondNameVal1;

                        }

                        query = "INSERT INTO \"" + expTypeName + "\" (" + attrList
                                + ",\"Precond_List\",\"Postcond_List\") VALUES (" + valList + ",'" + valList1 + "','"
                                + valList2 + "')";

                        // System.out.println(query);
                        PreparedStatement statement3 = pgsqlCon.prepareStatement(query);
                        statement3.executeUpdate();
                        System.out.println("1 row added Values: [(" + attrList + ") , (" + valList + ") , (" + valList1
                                + ") , (" + valList2 + ")] inserted in Table '" + expTypeName + "'");

                    }
                }

            }

        } catch (Exception e) {
            System.out.println("NVQLbeginExploit: PostgreSQL Error");
            System.out.println(e);
            System.exit(0);
        }
        return;

    }

}