import java.sql.*;
import java.util.ArrayList;

public class NVQLExploitType {

    static String PreCondDisp(ArrayList<String> precond) {
        String precondsyn = "";
        for (int i = 0; i < precond.size(); i++) {

            if (i >= 1)
                precondsyn = precondsyn + ", " + precond.get(i);
            else
                precondsyn = precondsyn + precond.get(i);
        }
        return precondsyn;
    }

    static String PostCondDisp(ArrayList<String> postcond) {
        String postcondsyn = "";
        for (int i = 0; i < postcond.size(); i++) {

            if (i >= 1)
                postcondsyn = postcondsyn + ", " + postcond.get(i);
            else
                postcondsyn = postcondsyn + postcond.get(i);
        }
        return postcondsyn;
    }

    static Boolean existsExploitType(String expTypeName, Connection pgsqlCon) throws Exception {
        String query;
        Boolean exists = false;

        try {
            query = "SELECT EXISTS (SELECT 1 FROM \"EXPLOIT_TYPE_DEF\" WHERE \"Exploit_Type_Name\" = '" + expTypeName
                    + "')";
            PreparedStatement statement = pgsqlCon.prepareStatement(query);
            ResultSet result = statement.executeQuery();
            result.next();

            if (result.getString(1).equals("t"))
                exists = true;
        } catch (Exception e) {
            System.out.println("NVQLExploitTypeDef: PostgreSQL Query Failed");
            System.out.println(e);
            System.exit(0);
        }
        return (exists);
    }

    static int existsExploitTypeSecCondPosition(String expTypeName, String PreorPost, String SecCondTypeName,
            Connection pgsqlCon) throws Exception {
        String query;
        int exists = -1, ctr = 0;

        try {
            query = "SELECT \"" + PreorPost + "\" FROM \"EXPLOIT_TYPE_DEF\" WHERE \"Exploit_Type_Name\" = '"
                    + expTypeName + "'";
            // System.out.println(query);
            PreparedStatement statement = pgsqlCon.prepareStatement(query);
            ResultSet result = statement.executeQuery();
            result.next();
            // System.out.println("$$" + result.getString(1) + "$$");

            String[] parts = result.getString(1).replace(" ", "").split(",");
            for (String part : parts) {

                if (part.equals(SecCondTypeName)) {
                    exists = ctr;
                    break;
                }
                ctr++;
            }

        } catch (Exception e) {
            System.out.println("NVQLExploitType.existsExploitTypeSecCondPosition: PostgreSQL Query Failed");
            System.out.println(e);
            System.exit(0);
        }
        return (exists);
    }

    static String corresSecCondAttrVal(String expTypeName, String PreorPostAttrValList, int pos, Connection pgsqlCon)
            throws Exception {
        String query;
        String attrval = "";
        int ctr = 0;

        try {
            query = "SELECT \"" + PreorPostAttrValList + "\" FROM \"EXPLOIT_TYPE_DEF\" WHERE \"Exploit_Type_Name\" = '"
                    + expTypeName + "'";
            // System.out.println(query);
            PreparedStatement statement = pgsqlCon.prepareStatement(query);
            ResultSet result = statement.executeQuery();
            result.next();
            // System.out.println("##" + result.getString(1) + "##");
            String[] parts = result.getString(1).substring(1, result.getString(1).length() - 1).replace(" ", "")
                    .split("\\),\\(");
            // System.out.println(parts);
            for (String part : parts) {
                if (ctr == pos) {
                    attrval = part;
                    break;
                }
                ctr++;
            }

        } catch (Exception e) {
            System.out.println("NVQLExploitType.corresSecCondAttrVal: PostgreSQL Query Failed");
            System.out.println(e);
            System.exit(0);
        }
        return (attrval);
    }

    static void createExploitType(String expTypeName, String attrDefList, ArrayList<String> preCond,
            ArrayList<String> postCond, String cveid, Connection pgsqlCon) {

        try {
            if (!existsExploitType(expTypeName, pgsqlCon))
                beginExploitType(expTypeName, attrDefList, preCond, postCond, cveid, pgsqlCon);
            else {
                System.out.println("ERROR.NVQLExploitType: Exploit-Type <" + expTypeName + "> already exists");
                System.exit(0);
            }
        }

        catch (Exception e) {
            System.out.println("NVQLExploitType: PostgreSQL Error");
            System.out.println(e);
            System.exit(0);
        }
    }

    public static String getAttrDefList(String expTypeName, Connection pgsqlCon) throws Exception {

        if (!existsExploitType(expTypeName, pgsqlCon)) {
            System.out.println("ERROR.NVQLExploitType: Exploit type <" + expTypeName + "> is not defined");
            System.exit(0);
            return null;
        }

        String query = "SELECT \"Exploit_Type_Attr_Def_List\" FROM \"EXPLOIT_TYPE_DEF\" WHERE \"Exploit_Type_Name\" ='"
                + expTypeName + "'";

        PreparedStatement statement1 = pgsqlCon.prepareStatement(query);
        ResultSet result1 = statement1.executeQuery();

        result1.next();

        return (result1.getString(1));
    }

    static void beginExploitType(String expTypeName, String attrDefList, ArrayList<String> preCond,
            ArrayList<String> postCond, String cveid, Connection pgsqlCon) {
        try {
            String SecCondTypeName, SecCondAttrVal, datalist = "";
            String PreSecCondTypeNameList = "", PreSecCondAttrValList = "", PostSecCondTypeNameList = "",
                    PostSecCondAttrValList = "", seperatorop = "";

            for (int i = 0; i < preCond.size(); i++) {
                SecCondTypeName = "";
                SecCondAttrVal = "";
                if (i >= 1)
                    seperatorop = ", ";
                else
                    seperatorop = "";

                if (preCond.get(i).indexOf("(") > 0) {
                    SecCondTypeName = preCond.get(i).substring(0, preCond.get(i).indexOf("("));
                    SecCondAttrVal = preCond.get(i).substring(preCond.get(i).indexOf("(") + 1,
                            preCond.get(i).indexOf(")"));
                } else {
                    SecCondTypeName = preCond.get(i).substring(0);
                    SecCondAttrVal = "";
                }
                PreSecCondTypeNameList = PreSecCondTypeNameList + seperatorop + SecCondTypeName;

                if (!NVQLSecCondType.existsSecCondType(SecCondTypeName, pgsqlCon)) {
                    System.out.println(
                            "ERROR.NVQLExploitType: Security Condition type <" + SecCondTypeName + "> is not defined");
                    System.exit(0);
                    return;
                }

                NVQLAttrValList aValList = null;
                NVQLAttrDefList aDefList = null;

                datalist = NVQLSecCondType.getAttrDefList(SecCondTypeName, pgsqlCon);
                if (!SecCondAttrVal.isEmpty()) {
                    aDefList = new NVQLAttrDefList(datalist);
                    aValList = new NVQLAttrValList(SecCondAttrVal);
                    for (String attr : aValList.getAttrList()) {
                        if (!aDefList.existsAttr(attr)) {
                            System.out.println("ERROR.NVQLExploitType: Undefined attribute <" + attr + ">");
                            System.exit(0);
                            return;
                        }
                    }
                    PreSecCondAttrValList = PreSecCondAttrValList + seperatorop + "(" + SecCondAttrVal + ")";
                } else
                    PreSecCondAttrValList = PreSecCondAttrValList + seperatorop + "()";
            }

            for (int i = 0; i < postCond.size(); i++) {
                SecCondTypeName = "";
                SecCondAttrVal = "";

                if (i >= 1)
                    seperatorop = ", ";
                else
                    seperatorop = "";

                if (postCond.get(i).indexOf("(") > 0) {
                    SecCondTypeName = postCond.get(i).substring(0, postCond.get(i).indexOf("("));
                    SecCondAttrVal = postCond.get(i).substring(postCond.get(i).indexOf("(") + 1,
                            postCond.get(i).indexOf(")"));
                } else {
                    SecCondTypeName = postCond.get(i).substring(0);
                    SecCondAttrVal = "";
                }
                PostSecCondTypeNameList = PostSecCondTypeNameList + seperatorop + SecCondTypeName;

                if (!NVQLSecCondType.existsSecCondType(SecCondTypeName, pgsqlCon)) {
                    System.out.println(
                            "ERROR.NVQLExploitType: Security Condition type <" + SecCondTypeName + "> is not defined");
                    System.exit(0);
                    return;
                }
                NVQLAttrValList aValList = null;
                NVQLAttrDefList aDefList = null;

                datalist = NVQLSecCondType.getAttrDefList(SecCondTypeName, pgsqlCon);
                if (!SecCondAttrVal.isEmpty()) {
                    aDefList = new NVQLAttrDefList(datalist);
                    aValList = new NVQLAttrValList(SecCondAttrVal);
                    for (String attr : aValList.getAttrList()) {
                        if (!aDefList.existsAttr(attr)) {
                            System.out.println("ERROR.NVQLExploitType: Undefined attribute <" + attr + ">");
                            System.exit(0);
                            return;
                        }
                    }
                    PostSecCondAttrValList = PostSecCondAttrValList + seperatorop + "(" + SecCondAttrVal + ")";
                } else
                    PostSecCondAttrValList = PostSecCondAttrValList + seperatorop + "()";
            }
            // System.out.println("@@" + PostSecCondTypeNameList);
            // System.out.println("##" + PreSecCondTypeNameList);
            // System.out.println("$$" + PostSecCondAttrValList);
            // System.out.println("^^" + PreSecCondAttrValList);

            // String query = "INSERT INTO \"EXPLOIT_TYPE_DEF\" (\"Exploit_Type_Name\",
            // \"Exploit_Type_Attr_Def_List\", \"Precond\", \"Precond_Attr_Val_List\",
            // \"Postcond_Attr_Val_List\" , \"Postcond\" ) VALUES ('"
            // + expTypeName + "','" + attrDefList + "','" + PreSecCondTypeNameList + "','"
            // + PreSecCondAttrValList.replace("$", "").replace("#", "") + "','" +
            // PostSecCondTypeNameList + "','"
            // + PostSecCondAttrValList.replace("$", "").replace("#", "") + "')";

            String query = "INSERT INTO \"EXPLOIT_TYPE_DEF\" (\"Exploit_Type_Name\", \"CveId(s)\", \"Exploit_Type_Attr_Def_List\", \"Precond\", \"Precond_Attr_Val_List\", \"Postcond\" , \"Postcond_Attr_Val_List\" ) VALUES ('"
                    + expTypeName + "','" + cveid + "','" + attrDefList + "','" + PreSecCondTypeNameList + "','"
                    + PreSecCondAttrValList + "','" + PostSecCondTypeNameList + "','" + PostSecCondAttrValList + "')";

            // System.out.println(query);
            PreparedStatement posted = pgsqlCon.prepareStatement(query);
            posted.executeUpdate();
            System.out.println("1 row added Values: [(" + expTypeName + ") , (" + cveid + ") , (" + attrDefList
                    + ")] inserted in Table 'EXPLOIT_TYPE_DEF'");

            NVQLAttrDefList adlObject = new NVQLAttrDefList(attrDefList);
            String quelist = adlObject.convertADL4SQL();

            if (quelist != "")
                query = "CREATE TABLE \"" + expTypeName + "\" (\"" + expTypeName + "_Id\" SERIAL, " + quelist
                        + ", \"Precond_List\" TEXT, \"Postcond_List\" TEXT)";
            else
                query = "CREATE TABLE \"" + expTypeName + "\" (\"" + expTypeName
                        + "_Id\" SERIAL, \"Precond_List\" TEXT, \"Postcond_List\" TEXT)";

            posted = pgsqlCon.prepareStatement(query);
            posted.executeUpdate();
            System.out.println("Table '" + expTypeName + "' created successfully");

        } catch (Exception e) {
            System.out.println("NVQLExploitType: PostgreSQL Error");
            System.out.println(e);
            System.exit(0);
        }

    }

}