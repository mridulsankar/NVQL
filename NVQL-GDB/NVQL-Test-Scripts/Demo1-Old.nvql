drop entity-type (host, network-domain, service, vulnerability,privilege,reachability,firewall,gateway)
drop relation-type (memberOf, connects, atHost, accessTo, accessBy, hasVuln)
drop security-condition-type(Reachability, Privilege)

define entity-type host (name:  string, ipAddr: string, macAddr: string, os:string)
define entity-type network-domain (name:string, netAddr:string, subnetMask:string)
define entity-type service (name:string, protocol:string, portNo:int, swName:string, swVer:string)
define entity-type vulnerability (name:string, cveId:string)
define entity-type privilege (privType:string)
define entity-type reachability (rchType:string)
define entity-type firewall (name:string, ifCount:int, ifIpAddr:string, ifSubnetMask:string)
define entity-type gateway (name:string, ifIpAddr:string, ifSubnetMask:string)

define unique host(ipAddr)
define unique vulnerability (cveId)

create entity host (name:"h1", ipAddr:"192.168.148.3", macAddr:"xx:xx:xx:xx:xx:xx", os:"Ubuntu")
create entity host (name:"h2", ipAddr:"192.168.148.5", macAddr:"xx:xx:xx:xx:xx:xx", os:"Win7")
create entity host (name:"h3", ipAddr:"192.168.148.8", macAddr:"xx:xx:xx:xx:xx:xx", os:"Win7")
//create entity domain (name:"dom1", netAddr:"192.168.148.1", SubnetMask:"255.255.255.0")
//create entity domain (name:"dom2", netAddr:"192.168.148.1", SubnetMask:"255.255.255.0")
create entity network-domain (name:"nd1", netAddr:"192.168.148.3",subnetMask:"255.255.255.0, 255.255.255.0")
create entity network-domain (name:"nd2", netAddr:"192.168.148.4",subnetMask:"255.255.255.0, 255.255.255.0")
create entity firewall (name:"fw1", ifCount:2, ifIpAddr:"192.168.148.1, 192.168.150.1", ifSubnetMask:"255.255.255.0, 255.255.255.0")
create entity firewall (name:"fw2", ifCount:2, ifIpAddr:"192.168.148.1, 192.168.150.1", ifSubnetMask:"255.255.255.0, 255.255.255.0")
//create entity host (hostname:"h1", ipAddr:"192.168.148.3", macAddr:"xx:xx:xx:xx:xx:xx", os:"Win7")
//create entity host (name:"h5", ipAddr:"193.168.148.3", macAddr:"xx:xx:xx:xx:xx:xx")
create entity service (name:"httpd1", protocol:"ftp", portNo:3, swName:"vsc", swVer:"1.1.2")

define relation-type memberOf(since: time) between {host,firewall}, {network-domain}
define relation-type connects (ifId: int) between {gateway}, {network-domain}
define relation-type atHost () between {service, privilege}, {host,gateway}
define relation-type accessTo () between {reachability} , {service}
define relation-type accessBy () between {reachability} , {host, network-domain}
define relation-type hasVuln () between {service} , {vulnerability}

define cardinality memberOf 10:1
define cardinality hasVuln 1:10

create relation x:host (x.ipAddr == "192.168.148.3") memberOf (since:"10:11:34") nd1:network-domain (nd1.netAddr == "192.168.148.3")
create relation h1:host (h1.ipAddr == "192.168.148.3") memberOf (since:"10:11:34",ifId: 0,name:"mmm") nd1:network-domain (nd1.netAddr == "192.168.148.3")
create relation h1:host (h1.ipAddr == "192.168.148.5") memberOf (since:"10:11:34") nd1:network-domain (nd1.netAddr == "192.168.148.3")
create relation h1:host (h1.ipAddr == "192.168.148.3") memberOf (since:"10:11:34") nd1:network-domain (nd1.netAddr == "192.168.148.3")
create relation fw1:firewall (fw1.name == "fw1") memberOf (since:"10:11:34") nd1:network-domain (nd1.netAddr == "192.168.148.3")
create relation fw1:firewall (fw1.name == "fw2") memberOf (since:"10:11:34") nd1:network-domain (nd1.netAddr == "192.168.148.4")
create relation fw1:firewall (fw1.name == "fw1") memberOf (since:"10:11:34") nd1:network-domain (nd1.netAddr == "192.168.148.4")
create relation fw1:firewall (fw1.name == "fw1") memberOf (since:"10:11:34") nd1:network-domain (nd1.netAddr == "192.168.148.3")

/*
create relation fw1:firewall (fw1.name == "fw1") connects (ifId:0) nd1:network-domain (nd1.netAddr == "192.168.148.0")
create relation fw1:firewall (fw1.name == "fw1") connects (ifId: 0) nd1:network-domain (nd1.netAddr == "192.168.148.0")
create relation fw1:firewall (fw1.name == "fw1") connects (ifId:0) nd1:network-domain (nd1.netAddr == "192.168.148.0")
create relation fw1:firewall (fw1.name == "fw1") connects (ifId: 0) nd1:network-domain (nd1.netAddr == "192.168.148.0")
create relation h1:host (h1.ipAddr == "192.168.148.3") memberOf (since:"10:11:34",ifIds: 10,name:"mmm") nd1:network-domain (nd1.netAddr == "192.168.148.0")
create relation h1:host (h1.ipAddr == "192.168.148.3") memberOf (since:"10:11:34") nd1:network-domain (nd1.netAddr == "192.168.148.0")
create relation h1:host (h1.ipAddr == "192.168.148.3") memberOf (since:"10:11:34") nd1:network-domain (nd1.netAddr == "192.168.148.0")
create relation fw1:firewall (fw1.name == "fw1") connects (ifId:0) nd1:network-domain (nd1.netAddr == "192.168.148.0")
create relation fw1:firewall (fw1.name == "fw1") connects (ifId: 0) nd1:network-domain (nd1.netAddr == "192.168.148.0")
*/
select x:host where (x.ipAddr=="192.168.148.3")
select x:host where (x.ipAddr=="192.168.148.3") and (x.name=="h1")
select x:host where (x:host memberOf nd1:network-domain)
select x:host where (x.name=="h1")
select x:host where (x.ipAddr=="192.168.148.3")
select x:host where (x:host memberOf nd1:network-domain) and (x.name=="h1")
select x:host where (x.name=="h1") or (x:host memberOf nd1:network-domain)
select x:host where (x.name=="h1") or (x:host memberOf nd1:network-domain) and (x.ipAddr == "192.168.148.3")
select x:host where (x.name=="h1") or (x:host memberOf nd1:network-domain) and (x.ipAddr == "192.168.148.3") or (x.ipAddr == "192.168.148.5")
select x:host where (x.name=="h1") and (x:host memberOf nd1:network-domain) and (x.ipAddr == "192.168.148.3") and (x.ipAddr == "192.168.148.5")
select x:network-domain where (x.name == "nd1")


//define exploit-type sshdBofExploit(expType:string, vuln:string) precond {Privilege,Reachability} postcond {Privilege}

define security-condition-type Reachability (name:string, since: time) accessBy {network-domain, host} accessTo {service} 
define security-condition-type Privilege (name: string, since:time, privType: string) atHost {host,gateway}
/*
define security-condition-type Reacha2bility (name:string, since: time) access2By {network-domain, host} accessTo {service} 
define security-condition-type Reachab3ility (name:string, since: time) accessBy {network-domain, host} accwessTo {service} 
define security-condition-type Reachabi4lity (name:string, since: time) acces4sBy {network-domain, host} access3To {service} 
define security-condition-type Privileg1e (name: string, since:time, privType: string) atH4ost {host,gateway}
define security-condition-type Reacha2bility (name:string, since: time) accessBy {netjwork-domain, host} accessTo {service} 
define security-condition-type Reachab3ility (name:string, since: time) accessBy {network-domain, hojst} accessTo {service} 
define security-condition-type Reachabi4lity (name:string, since: time) accessBy {network-jdomain, hokst} accessTo {service} 
define security-condition-type Reacha2bility (name:string, since: time) accessBy {network-domain, host} accessTo {sernvice} 
define security-condition-type Reachab3ility (name:string, since: time) accessBy {network-domainl, hoost} accessTo {sjervice} 
define security-condition-type Privileg1e (name: string, since:time, privType: string) atHost {hosmt,gateway}
define security-condition-type Privileg1e (name: string, since:time, privType: string) atHost {host,gajnteway}
define security-condition-type Privileg1e (name: string, since:time, privType: string) atHost {hnost,gajnteway}
define security-condition-type Reachability (name:string, since: time) accessBy {network-domain, host} accessTo {service} 
define security-condition-type Privilege (name: string, since:time, privType: string) atHost {host,gateway}
*/
/*
create security-condition Reachability (name:"http01", since: "00:00:99" , dgdg:454) accessBy {x:network-domain (x.name == "nd1")} accessTo {y:service (y.name == "httpd1")}
create security-condition Reachability (na1me:"http01", since: "00:00:99") accessBy {x:host (x.ipAddr == "145:255:223:111")} accessTo {y:service (y.name == "httpd1")}
create security-condition Privilege (name:"user0", sinc2e: "00:00:99", privType: "user") atHost {x:host (x.name == "h0")}
create security-condition Reachability (name:"http01") accessBy {x:network-domain (x.name == "nd1")} accessTo {y:service (y.name == "httpd1")}
create security-condition Reachability (since: "00:00:99") accessBy {x:host (x.ipAddr == "145:255:223:111")} accessTo {y:service (y.name == "httpd1")}
create security-condition Privilege (name:"user0", privType: "user") atHost {x:host (x.name == "h0")}
create security-condition Reac2hability (name:"http01") accessBy {x:network-domain (x.name == "nd1")} accessTo {y:service (y.name == "httpd1")}
create security-condition Reach3ability (since: "00:00:99") accessBy {x:host (x.ipAddr == "145:255:223:111")} accessTo {y:service (y.name == "httpd1")}
create security-condition Privil5ege (name:"user0", privType: "user") atHost {x:host (x.name == "h0")}
create security-condition Reachability (name:"http01", since: "00:00:19") accessBy {x:n2etwork-domain (x.name == "nd1")} accessTo {y:service (y.name == "httpd1")}
create security-condition Reachability (name:"http01", since: "00:00:19") accessBy {x:ho3st (x.ipAddr == "145:255:223:111")} accessTo {y:service (y.name == "httpd1")}
create security-condition Privilege (name:"user0", since: "00:00:19", privType: "user") atHost {x:hos2t (x.name == "h0")}
create security-condition Reachability (name:"http01", since: "00:00:19") accessBy {x:network-domain (x.name == "nd1")} accessTo {y:serv4ice (y.name == "httpd1")}
create security-condition Reachability (name:"http01", since: "00:00:19") accessBy {x:host (x.ipAddr == "145:255:223:111")} accessTo {y:ser5vice (y.name == "httpd1")}
*/
create security-condition Reachability (name:"http01", since: "00:00:19") accessBy {x:network-domain (x.name == "nd1")} accessTo {y:service (y.name == "httpd1")}
create security-condition Reachability (name:"http02", since: "00:00:19") accessBy {x:host (x.ipAddr == "192.168.148.3")} accessTo {y:service (y.name == "httpd1")}
create security-condition Privilege (name:"user0", since: "00:00:19", privType: "user") atHost {x:host (x.name == "h1")}

create security-condition Reachability (name:"http01", since: "00:00:19") accessBy {x:network-domain (x.name == "nd1")} 
create security-condition Reachability (name:"http01", since: "00:00:19") accessTo {y:service (y.name == "httpd1")}
create security-condition Reachability (name:"sshd01", since: "00:00:19") accessTo {y:service (y.name == "httpd1")}  accessBy {x:network-domain (x.name == "nd1")} 
create security-condition Reachability (name:"http02", since: "00:00:19") accessTo {y:service (y.name == "httpd1")}
create security-condition Reachability (name:"http02", since: "00:00:19") accessBy {x:host (x.ipAddr == "192.168.148.3")}
create security-condition Reachability (name:"http02", sin0ce: "00:00:19") accessTo {y:service (y.name == "httpd1")} accessBy {x:host (x.ipAddr == "192.168.148.3")} 

